/*
 * SPDX-License-Identifier: Apache-2.0
 *
 * The OpenSearch Contributors require contributions made to
 * this file be licensed under the Apache-2.0 license or a
 * compatible open source license.
 *
 * Modifications Copyright OpenSearch Contributors. See
 * GitHub history for details.
 */

/*
 * Licensed to Elasticsearch under one or more contributor
 * license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright
 * ownership. Elasticsearch licenses this file to you under
 * the Apache License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

import org.opensearch.gradle.BuildPlugin

import static java.lang.Boolean.valueOf
import static java.lang.System.getenv
import static java.util.Objects.isNull
import static java.util.Objects.nonNull

allprojects {
  plugins.withType(BuildPlugin).whenPluginAdded {
    project.apply plugin: "com.diffplug.spotless"
    project.apply plugin: "org.openrewrite.rewrite"

    // Configuration to resolve all dependency conflicts
    configurations.all {
      resolutionStrategy {
        // Force OpenRewrite versions
        force "org.openrewrite:rewrite-core:8.59.1"
        force "org.openrewrite:rewrite-java:8.59.1"
        force "org.openrewrite:rewrite-properties:8.59.1"
        force "org.openrewrite:rewrite-xml:8.59.1"
        force "org.openrewrite:rewrite-maven:8.59.1"
        force "org.openrewrite:rewrite-gradle:8.59.1"
        force "org.openrewrite:rewrite-groovy:8.59.1"
        force "org.openrewrite:rewrite-java-17:8.59.1"

        // Force Reactor versions
        force "io.projectreactor:reactor-core:3.8.0-M5"
        force "io.projectreactor.addons:reactor-adapter:3.6.0-RC3"
        force "io.projectreactor.addons:reactor-extra:3.6.0-RC3"
        force "io.projectreactor:reactor-test:3.8.0-M5"

        // Force ASM versions
        force "org.ow2.asm:asm:9.8"
        force "org.ow2.asm:asm-util:9.8"
        force "org.ow2.asm:asm-tree:9.8"

        // Force Jackson versions
        force "com.fasterxml.jackson:jackson-bom:2.17.3"
        force "com.fasterxml.jackson.core:jackson-annotations:2.17.3"
        force "com.fasterxml.jackson.core:jackson-core:2.17.3"
        force "com.fasterxml.jackson.core:jackson-databind:2.17.3"
        force "com.fasterxml.jackson.dataformat:jackson-dataformat-smile:2.17.3"
        force "com.fasterxml.jackson.dataformat:jackson-dataformat-xml:2.17.3"
        force "com.fasterxml.jackson.dataformat:jackson-dataformat-csv:2.17.3"
        force "com.fasterxml.jackson.module:jackson-module-parameter-names:2.17.3"
        force "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.17.3"
        force "com.fasterxml.jackson.datatype:jackson-datatype-jdk8:2.17.3"

        // Force other common dependency versions
        force "org.jetbrains:annotations:26.0.2"
        force "io.micrometer:micrometer-core:1.14.7"
        force "org.apache.commons:commons-lang3:3.18.0"
        force "org.apache.commons:commons-text:1.13.1"
        force "io.github.classgraph:classgraph:4.8.181"
        force "org.slf4j:slf4j-api:2.0.6"
        force "org.apache.httpcomponents:httpcore:4.4.16"
        force "commons-codec:commons-codec:1.17.1"
        force "com.google.errorprone:error_prone_annotations:2.36.0"
        force "jakarta.activation:jakarta.activation-api:2.1.3"
      }
    }

    spotless {
      java {
        target '.gitignore', '**/*.java'
        importOrder(
          'de.thetaphi',
          'com.carrotsearch',
          'com.fasterxml',
          'com.avast',
          'com.sun',
          'com.maxmind|com.github|com.networknt|groovy|nebula',
          'org.antlr',
          'software.amazon',
          'com.azure|com.microsoft|com.ibm|com.google|joptsimple|org.apache|org.bouncycastle|org.codehaus|org.opensearch|org.objectweb|org.joda|org.hamcrest|org.openjdk|org.gradle|org.junit',
          'javax',
          'java',
          '',
          '\\#java|\\#org.opensearch|\\#org.hamcrest|\\#'
        )
        eclipse()
          .withP2Mirrors(Map.of("https://download.eclipse.org/", "https://mirror.umd.edu/eclipse/"))
          .configFile(rootProject.file('buildSrc/formatterConfig.xml'))

        custom 'Refuse wildcard imports', {
          if (it =~ /\s+import .*\*;/) {
            throw new AssertionError("Do not use wildcard imports. 'spotlessApply' cannot resolve this issue.")
          }
        }

        if (nonNull(System.getProperty('spotless.paddedcell'))) {
          paddedCell()
        }
      }
    }

    dependencies {
      // Add dependency constraints to prevent version conflicts
      constraints {
        implementation('org.jetbrains:annotations') {
          version { strictly '26.0.2' }
        }
        implementation('org.openrewrite:rewrite-core') {
          version { strictly '8.59.1' }
        }
        implementation('com.fasterxml.jackson.core:jackson-databind') {
          version { strictly '2.17.3' }
        }
        implementation('io.projectreactor:reactor-core') {
          version { strictly '3.8.0-M5' }
        }
        implementation('org.apache.commons:commons-text') {
          version { strictly '1.13.1' }
        }
      }

      rewrite("org.openrewrite.recipe:rewrite-third-party:0.24.3")

      api("org.jboss.resteasy:resteasy-jackson2-provider:${versions.resteasy}") {
        exclude module: 'jakarta.activation-api'
        exclude group: 'com.fasterxml.jackson.core', module: 'jackson-annotations'
        exclude group: 'com.fasterxml.jackson.core', module: 'jackson-core'
        exclude group: 'com.fasterxml.jackson.core', module: 'jackson-databind'
        exclude group: 'com.fasterxml.jackson.dataformat', module: 'jackson-dataformat-smile'
        exclude group: 'com.fasterxml.jackson.module', module: 'jackson-module-parameter-names'
        exclude group: 'com.fasterxml.jackson.dataformat', module: 'jackson-dataformat-xml'
        exclude group: 'com.fasterxml.jackson.dataformat', module: 'jackson-dataformat-csv'
        exclude group: 'com.fasterxml.jackson.datatype', module: 'jackson-datatype-jsr310'
        exclude group: 'com.fasterxml.jackson.datatype', module: 'jackson-datatype-jdk8'
      }
    }

    rewrite {
      activeRecipe(
        "org.openrewrite.java.RemoveUnusedImports"
      )

      // File exclusions
      exclusions.addAll([
        "**simple-bulk11.json",
        "**simple-msearch5.json",
        "**SearchAfterIT.java",
        "**StarTreeMapper.java"
      ])

      exportDatatables = true
      failOnDryRunResults = true

      plainTextMask(
        "**.gradle",
        "**.json",
        "**.md",
        "**.svg",
        "**.yml"
      )
    }

    // Task configurations
    precommit.dependsOn(rewriteDryRun, spotlessJavaCheck)
    tasks.check.dependsOn(rewriteDryRun, spotlessJavaCheck)

    // Auto-formatting configuration
    if (valueOf(getenv("formatting")) && isNull(getenv("JENKINS_URL"))) {
      tasks.assemble.dependsOn(rewriteRun, spotlessApply)
    }
  }
}
